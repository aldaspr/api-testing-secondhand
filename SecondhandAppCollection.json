{
	"info": {
		"_postman_id": "09320561-1701-4ac8-bb55-69d196df132e",
		"name": "Secondhand App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29373333"
	},
	"item": [
		{
			"name": "Seller",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Create User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Membuat nama acak sebanyak 5 karakter\r",
											"let name = '';\r",
											"const characters = 'abcdefghijklmnopqrstuvwxyz';\r",
											"for (let i = 0; i < 5; i++) {\r",
											"    name += characters.charAt(Math.floor(Math.random() * characters.length));\r",
											"}\r",
											"\r",
											"// Membuat email acak menggunakan nama acak sebelumnya\r",
											"let email = name + '@example.com';\r",
											"\r",
											"// Menyimpan email acak ke dalam environment variable 'setEmailSeller'\r",
											"pm.environment.set('setEmailSeller', email);\r",
											"\r",
											"console.log(email);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test('Simpan ID dari Body Response ke dalam Variabel Lingkungan', function () {\r",
											"    // Mendapatkan nilai 'id' dari body response\r",
											"    let idFromResponse = pm.response.json().id;\r",
											"\r",
											"    // Memastikan nilai 'id' tidak undefined\r",
											"    pm.expect(idFromResponse).to.not.be.undefined;\r",
											"\r",
											"    // Menyimpan nilai 'id' ke dalam variabel lingkungan 'id'\r",
											"    pm.environment.set('id_seller', idFromResponse);\r",
											"    console.log('Nilai ID yang disimpan:', idFromResponse);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "full_name",
											"value": "cici",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{setEmailSeller}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "123456",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "081215521394",
											"type": "text"
										},
										{
											"key": "address",
											"value": "bandung",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": []
										},
										{
											"key": "city",
											"value": "bandung",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base.url}}/auth/register",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set('access_token_seller', pm.response.json().access_token);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{setEmailSeller}}\",\r\n  \"password\": \"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base.url}}/auth/login",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Product",
					"item": [
						{
							"name": "Create Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Simpan ID Product dari Body Response ke dalam Variabel Lingkungan', function () {\r",
											"    // Mendapatkan nilai 'id' dari body response\r",
											"    let idFromResponse = pm.response.json().id;\r",
											"\r",
											"    // Memastikan nilai 'id' tidak undefined\r",
											"    pm.expect(idFromResponse).to.not.be.undefined;\r",
											"\r",
											"    // Menyimpan nilai 'id' ke dalam variabel lingkungan 'id'\r",
											"    pm.environment.set('id_product', idFromResponse);\r",
											"    console.log('Nilai ID yang disimpan:', idFromResponse);\r",
											"});\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "access_token",
										"value": "{{access_token_seller}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "kucieng",
											"type": "text"
										},
										{
											"key": "description",
											"value": "lucu",
											"type": "text"
										},
										{
											"key": "base_price",
											"value": "5000",
											"type": "text"
										},
										{
											"key": "category_ids",
											"value": "1",
											"type": "text"
										},
										{
											"key": "location",
											"value": "bandung",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "2.jpg"
										}
									]
								},
								"url": {
									"raw": "{{base.url}}/seller/product",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"seller",
										"product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "access_token",
										"value": "{{access_token_seller}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base.url}}/seller/product",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"seller",
										"product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Specific Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "access_token",
										"value": "{{access_token_seller}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base.url}}/seller/product/{{id_product}}",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"seller",
										"product",
										"{{id_product}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Buyer",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Create User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Membuat nama acak sebanyak 5 karakter\r",
											"let name = '';\r",
											"const characters = 'abcdefghijklmnopqrstuvwxyz';\r",
											"for (let i = 0; i < 5; i++) {\r",
											"    name += characters.charAt(Math.floor(Math.random() * characters.length));\r",
											"}\r",
											"\r",
											"// Membuat email acak menggunakan nama acak sebelumnya\r",
											"let email = name + '@example.com';\r",
											"\r",
											"// Menyimpan email acak ke dalam environment variable 'setEmailBuyer'\r",
											"pm.environment.set('setEmailBuyer', email);\r",
											"\r",
											"console.log(email);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test('Simpan ID dari Body Response ke dalam Variabel Lingkungan', function () {\r",
											"    // Mendapatkan nilai 'id' dari body response\r",
											"    let idFromResponse = pm.response.json().id;\r",
											"\r",
											"    // Memastikan nilai 'id' tidak undefined\r",
											"    pm.expect(idFromResponse).to.not.be.undefined;\r",
											"\r",
											"    // Menyimpan nilai 'id' ke dalam variabel lingkungan 'id'\r",
											"    pm.environment.set('id_buyer', idFromResponse);\r",
											"    console.log('Nilai ID yang disimpan:', idFromResponse);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "full_name",
											"value": "ciki",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{setEmailBuyer}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "123456",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "081215521395",
											"type": "text"
										},
										{
											"key": "address",
											"value": "bali",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": []
										},
										{
											"key": "city",
											"value": "bali",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base.url}}/auth/register",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set('access_token_buyer', pm.response.json().access_token);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{setEmailBuyer}}\",\r\n  \"password\": \"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base.url}}/auth/login",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Product",
					"item": [
						{
							"name": "Get Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "access_token",
										"value": "{{access_token_buyer}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base.url}}/buyer/product?status&category_id&search=kucieng&page=1&per_page=10",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"buyer",
										"product"
									],
									"query": [
										{
											"key": "status",
											"value": null
										},
										{
											"key": "category_id",
											"value": null
										},
										{
											"key": "search",
											"value": "kucieng"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Specific Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "access_token",
										"value": "{{access_token_buyer}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base.url}}/buyer/product/{{id_product}}",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"buyer",
										"product",
										"{{id_product}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Order",
					"item": [
						{
							"name": "Create Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Simpan ID dari Body Response ke dalam Variabel Lingkungan', function () {\r",
											"    // Mendapatkan nilai 'id' dari body response\r",
											"    let idFromResponse = pm.response.json().id;\r",
											"\r",
											"    // Memastikan nilai 'id' tidak undefined\r",
											"    pm.expect(idFromResponse).to.not.be.undefined;\r",
											"\r",
											"    // Menyimpan nilai 'id' ke dalam variabel lingkungan 'id_order'\r",
											"    pm.environment.set('id_order', idFromResponse);\r",
											"    console.log('Nilai ID yang disimpan:', idFromResponse);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "access_token",
										"value": "{{access_token_buyer}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"product_id\": {{id_product}},\r\n  \"bid_price\": 3000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base.url}}/buyer/order",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"buyer",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "access_token",
										"value": "{{access_token_buyer}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base.url}}/buyer/order",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"buyer",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "access_token",
										"value": "{{access_token_buyer}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base.url}}/buyer/order/{{id_order}}",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"buyer",
										"order",
										"{{id_order}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Order by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "access_token",
										"value": "{{access_token_buyer}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"bid_price\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base.url}}/buyer/order/{{id_order}}",
									"host": [
										"{{base.url}}"
									],
									"path": [
										"buyer",
										"order",
										"{{id_order}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Seller",
			"item": [
				{
					"name": "Edit Order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "access_token",
								"value": "{{access_token_seller}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "status",
									"value": "sold",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base.url}}/seller/order/{{id_order}}",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"seller",
								"order",
								"{{id_order}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "access_token",
								"value": "{{access_token_seller}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base.url}}/seller/product/{{id_product}}",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"seller",
								"product",
								"{{id_product}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}